# Define upstreams for client and API
upstream client {
  server localhost:3000; 
}

upstream api {
  server localhost:3001; 
}

# Server block for handling http traffic
server {
  listen 80;
  server_name reapp.dk www.reapp.dk;

  # Redirect all HTTP traffic to HTTPS
  return 301 https://$host$request_uri;
}

# Server block for handling https traffic
server {
  listen 443 ssl;
  server_name reapp.dk www.reapp.dk;

  # Client - Serve the React application
  location / {
      proxy_pass http://client;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
  }

  # SockJS Node - Required for WebSocket or specific Node.js features
  location /sockjs-node {
      proxy_pass http://client;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
  }

  # API - Proxy requests to the Express.js API
  location /api {
      rewrite /api/(.*) /$1 break;
      proxy_pass http://api;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
  }

}
